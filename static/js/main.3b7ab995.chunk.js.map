{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","services/user.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","getUserById","usersFromServer","find","TodoInfo","todo","userId","classNames","completed","title","TodoList","todos","map","initialTodos","getNewTodoId","Math","max","App","useState","setTodos","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","pattern","getUser","reset","action","method","onSubmit","event","preventDefault","currentTodos","onReset","htmlFor","type","placeholder","value","onChange","test","target","trimStart","autoComplete","required","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b7ab995.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './UserInfo.scss';\nimport React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import { User } from '../types/User';\nimport usersFromServer from '../api/users';\n\nexport function getUserById(id: number): User | null {\n  return usersFromServer.find(user => user.id === id)\n    || null;\n}\n","import './TodoInfo.scss';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport { getUserById } from '../../services/user';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const user = getUserById(todo.userId);\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { getUserById } from './services/user';\n\nconst initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nfunction getNewTodoId(todos: Todo[]) {\n  const maxId = Math.max(\n    ...todos.map(todo => todo.id),\n  );\n\n  return maxId + 1;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n  const [title, setTitle] = useState<string>('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const pattern = /^[a-zA-Z0-9Є-ЯҐа-їґ ]+$/;\n\n  const getUser = getUserById(userId);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (pattern.test(event.target.value) || event.target.value === '') {\n      setHasTitleError(false);\n      setTitle(event.target.value.trimStart());\n    }\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n\n    setHasTitleError(false);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title) {\n      setHasTitleError(true);\n\n      return;\n    }\n\n    if (!getUser) {\n      setHasUserIdError(true);\n\n      return;\n    }\n\n    if (title && userId) {\n      setTodos(currentTodos => [\n        ...currentTodos,\n        {\n          id: getNewTodoId(todos),\n          title,\n          userId: getUser.id,\n          user: getUser,\n          completed: false,\n        },\n      ]);\n    }\n\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n        onReset={reset}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"post-title\">Title:</label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"post-title\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n            autoComplete=\"off\"\n          />\n\n          {hasTitleError && (\n            <span className=\"error\"> Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"post-user-id\">\n            User:\n          </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"post-user-id\"\n            value={userId}\n            onChange={handleUserIdChange}\n            required\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n\n          </select>\n\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}